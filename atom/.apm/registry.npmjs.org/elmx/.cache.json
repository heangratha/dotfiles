{"_id":"elmx","_rev":"6-76809d2e8c7e0cd789307094f89e6cbe","name":"elmx","description":"A tiny precompiler that takes an Elm program with embedded HTML and desugars the HTML into elm-html syntax","dist-tags":{"latest":"1.0.4"},"versions":{"1.0.0":{"name":"elmx","main":"dist/parser.js","version":"1.0.0","description":"A tiny precompiler that takes an Elm program with embedded HTML and desugars the HTML into elm-html syntax","keywords":["elm","embedded","html","elmx"],"repository":{"type":"git","url":"git+https://github.com/pzavolinsky/elmx.git"},"bugs":{"url":"https://github.com/pzavolinsky/elmx/issues"},"homepage":"https://github.com/pzavolinsky/elmx","scripts":{"test":"gulp test"},"author":{"name":"Patricio Zavolinsky"},"license":"MIT","dependencies":{"htmlparser2":"^3.9.0","ramda":"^0.19.0"},"devDependencies":{"babel-preset-es2015":"^6.3.13","gulp":"^3.9.0","gulp-babel":"^6.1.1","gulp-jasmine":"^2.2.1","jasmine":"^2.4.1","minimist":"^1.2.0"},"babel":{"presets":["es2015"]},"gitHead":"34310b8231d8c6722ad0f4d089ce1c453db22201","_id":"elmx@1.0.0","_shasum":"0d600eca6b0f64585e26c2e3e1810a4979275b8b","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.4.0","_npmUser":{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"},"dist":{"shasum":"0d600eca6b0f64585e26c2e3e1810a4979275b8b","tarball":"https://registry.npmjs.org/elmx/-/elmx-1.0.0.tgz"},"maintainers":[{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"}],"directories":{}},"1.0.1":{"name":"elmx","main":"dist/parser.js","version":"1.0.1","description":"A tiny precompiler that takes an Elm program with embedded HTML and desugars the HTML into elm-html syntax","keywords":["elm","embedded","html","elmx"],"repository":{"type":"git","url":"git+https://github.com/pzavolinsky/elmx.git"},"bugs":{"url":"https://github.com/pzavolinsky/elmx/issues"},"homepage":"https://github.com/pzavolinsky/elmx","scripts":{"test":"gulp test"},"author":{"name":"Patricio Zavolinsky"},"license":"MIT","dependencies":{"htmlparser2":"^3.9.0","ramda":"^0.19.0"},"devDependencies":{"babel-preset-es2015":"^6.3.13","gulp":"^3.9.0","gulp-babel":"^6.1.1","gulp-jasmine":"^2.2.1","jasmine":"^2.4.1","minimist":"^1.2.0"},"babel":{"presets":["es2015"]},"gitHead":"47db5ab6958e84fe2a4f33f4569871bac6c7b6dc","_id":"elmx@1.0.1","_shasum":"ea3f90b053487eece2811a6bf7915527486dd674","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.5.0","_npmUser":{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"},"dist":{"shasum":"ea3f90b053487eece2811a6bf7915527486dd674","tarball":"https://registry.npmjs.org/elmx/-/elmx-1.0.1.tgz"},"maintainers":[{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/elmx-1.0.1.tgz_1454958987734_0.8592862980440259"},"directories":{}},"1.0.2":{"name":"elmx","main":"dist/parser.js","version":"1.0.2","description":"A tiny precompiler that takes an Elm program with embedded HTML and desugars the HTML into elm-html syntax","keywords":["elm","embedded","html","elmx"],"repository":{"type":"git","url":"git+https://github.com/pzavolinsky/elmx.git"},"bugs":{"url":"https://github.com/pzavolinsky/elmx/issues"},"homepage":"https://github.com/pzavolinsky/elmx","scripts":{"test":"gulp test"},"author":{"name":"Patricio Zavolinsky"},"license":"MIT","dependencies":{"htmlparser2":"^3.9.0","ramda":"^0.19.0"},"devDependencies":{"babel-preset-es2015":"^6.3.13","browserify":"^13.0.0","gulp":"^3.9.0","gulp-babel":"^6.1.1","gulp-jasmine":"^2.2.1","gulp-rename":"^1.2.2","gulp-uglify":"^1.5.2","gulp-util":"^3.0.7","jasmine":"^2.4.1","minimist":"^1.2.0","vinyl-source-stream":"^1.1.0"},"babel":{"presets":["es2015"]},"gitHead":"af8f30a9851154fca9b4c56a057c60d6fa6827e2","_id":"elmx@1.0.2","_shasum":"98cc2983b83dfb1da2c3fd5b66337751c7975b62","_from":".","_npmVersion":"3.7.3","_nodeVersion":"5.8.0","_npmUser":{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"},"dist":{"shasum":"98cc2983b83dfb1da2c3fd5b66337751c7975b62","tarball":"https://registry.npmjs.org/elmx/-/elmx-1.0.2.tgz"},"maintainers":[{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/elmx-1.0.2.tgz_1459084197450_0.8134795925579965"},"directories":{}},"1.0.3":{"name":"elmx","main":"dist/parser.js","version":"1.0.3","description":"A tiny precompiler that takes an Elm program with embedded HTML and desugars the HTML into elm-html syntax","keywords":["elm","embedded","html","elmx"],"repository":{"type":"git","url":"git+https://github.com/pzavolinsky/elmx.git"},"bugs":{"url":"https://github.com/pzavolinsky/elmx/issues"},"homepage":"https://github.com/pzavolinsky/elmx","scripts":{"test":"gulp test"},"author":{"name":"Patricio Zavolinsky"},"license":"MIT","dependencies":{"htmlparser2":"^3.9.0","ramda":"^0.19.0"},"devDependencies":{"babel-preset-es2015":"^6.3.13","browserify":"^13.0.0","gulp":"^3.9.0","gulp-babel":"^6.1.1","gulp-jasmine":"^2.2.1","gulp-rename":"^1.2.2","gulp-uglify":"^1.5.2","gulp-util":"^3.0.7","jasmine":"^2.4.1","minimist":"^1.2.0","vinyl-source-stream":"^1.1.0"},"babel":{"presets":["es2015"]},"gitHead":"6a1c41956734636f33f5c8be054a977e8b7391e6","_id":"elmx@1.0.3","_shasum":"ff50d44bd089fc2e78c2f63d7e5fd471fec5b7e8","_from":".","_npmVersion":"3.6.0","_nodeVersion":"5.6.0","_npmUser":{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"},"dist":{"shasum":"ff50d44bd089fc2e78c2f63d7e5fd471fec5b7e8","tarball":"https://registry.npmjs.org/elmx/-/elmx-1.0.3.tgz"},"maintainers":[{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/elmx-1.0.3.tgz_1463656013356_0.8171612580772489"},"directories":{}},"1.0.4":{"name":"elmx","main":"dist/parser.js","version":"1.0.4","description":"A tiny precompiler that takes an Elm program with embedded HTML and desugars the HTML into elm-html syntax","keywords":["elm","embedded","html","elmx"],"repository":{"type":"git","url":"git+https://github.com/pzavolinsky/elmx.git"},"bugs":{"url":"https://github.com/pzavolinsky/elmx/issues"},"homepage":"https://github.com/pzavolinsky/elmx","scripts":{"test":"gulp test"},"author":{"name":"Patricio Zavolinsky"},"license":"MIT","dependencies":{"htmlparser2":"^3.9.0","ramda":"^0.19.0"},"devDependencies":{"babel-preset-es2015":"^6.3.13","browserify":"^13.0.0","gulp":"^3.9.0","gulp-babel":"^6.1.1","gulp-jasmine":"^2.2.1","gulp-rename":"^1.2.2","gulp-uglify":"^1.5.2","gulp-util":"^3.0.7","jasmine":"^2.4.1","minimist":"^1.2.0","vinyl-source-stream":"^1.1.0"},"babel":{"presets":["es2015"]},"gitHead":"c24dc311176019cc9e5e8ce0edd856a1d844f024","_id":"elmx@1.0.4","_shasum":"4966d6e83b746ca4a060ff9a5a79db071147a4b0","_from":".","_npmVersion":"3.7.3","_nodeVersion":"5.8.0","_npmUser":{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"},"dist":{"shasum":"4966d6e83b746ca4a060ff9a5a79db071147a4b0","tarball":"https://registry.npmjs.org/elmx/-/elmx-1.0.4.tgz"},"maintainers":[{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/elmx-1.0.4.tgz_1465583673128_0.25866954983212054"},"directories":{}}},"readme":"elmx\n====\n\n`elmx` is to Elm what React's JSX is to Javascript. That is, Elmx is a tiny precompiler that takes an Elm program with embedded HTML and desugars the HTML into [elm-html](https://github.com/evancz/elm-html) syntax.\n\nAtom integration\n----------------\n\n```\napm install language-elmx\n```\n\nIf you also have the Elm Atom packages installed you will get additional functionality in your `.elmx` files:\n - If you have `language-elm`, you will get auto-complete.\n - If you have `linter-elm-make`, you will get `.elmx` to `.elm` compilation.\n\nSee [language-elmx](https://github.com/pzavolinsky/atom-language-elmx) for more details.\n\nEmacs integration\n-----------------\n\nSorry but currently there is no Emacs integration for `elmx`. You could check the [Gulp integration example](https://github.com/pzavolinsky/elmx/tree/master/example) for an alternative workflow that runs `elmx` independently of your editor.\n\nOn the flip side, if you are an Emacs fan then probably you are a hacker as well and could help with the integration. If you are up for it, check the [TextMate grammar file for elmx](https://github.com/pzavolinsky/atom-language-elmx/blob/master/grammars/elmx.cson). Also maybe you can hack (ehm, I mean *compose*) the existing linter and auto-complete Elm plugins like I did for the [language-elm Atom package](https://github.com/pzavolinsky/atom-language-elmx/blob/master/index.js).\n\nIf you want to contribute with this or any other `elmx` integration let me know in an issue and I'll put the link here.\n\n\nWebpack integration\n----------------\nUse [elmx-webpack-preloader](https://www.npmjs.com/package/elmx-webpack-preloader).\n\n\nGulp integration\n----------------\nThis integration uses Gulp to monitor changes in `.elmx` files and pipes the file contents through the `elmx` parser to produce `.elm` files.\n\nSee the full integration example in: [Gulp integration example](https://github.com/pzavolinsky/elmx/tree/master/example)\n\n\nLibrary installation\n--------------------\n\n```\nnpm install --save-dev elmx\n```\n\nThen:\n\n```javascript\nconst elmxParser = require('elmx');\n\nconst elmSource = elmxParser(elmxSource);\n```\n\n\nSyntax\n------\n\nIn the same spirit of JSX, `elmx` syntax allows HTML tags embedded in the Elm code and uses `{` and `}` to interpolate Elm code into the HTML.\n\nCheck the [live cheatsheet](http://pzavolinsky.github.io/elmx) to play around with `elmx` directly in the browser\n\nFor example:\n\n```elm\nimport Html\nimport Html.Attributes\n\nmain : Html.Html msg\nmain = <span>Hello, elmx!</span>\n```\n\nTranslates to:\n\n```elm\nimport Html\nimport Html.Attributes\n\nmain : Html.Html msg\nmain = Html.span [] [Html.text \"Hello, elmx!\"]\n```\n\nNote that for `elmx` to work you need to import both `Html` and `Html.Attributes`.\n\n\nAttributes can be specified with:\n\n```elm\nshowError : Html msg\nshowError = <span class=\"error\">Oops!</span>\n```\n\nOr:\n\n```elm\nshowError : String -> Html msg\nshowError errorClass = <span class={errorClass}>Oops!</span>\n```\n\nOr:\n\n```elm\nshowError : Html.Attribute msg -> Html msg\nshowError errorAttr = <span {errorAttr}>Oops!</span>\n```\n\nOr:\n\n```elm\nimport Html.Events exposing (onInput)\n-- note the import above!\n\nmyInput : (String -> msg) -> Html msg\nmyInput tagFn = <input {onInput tagFn}/>\n```\n\nOr, for any of the following, `onClick`, `onDoubleClick`, `onMouseDown`, `onMouseUp`, `onMouseEnter`, `onMouseLeave`, `onMouseOver`, `onMouseOut`, `onInput`, `onCheck`, `onSubmit`, `onSubmitOptions`, `onBlur`, `onFocus`:\n\n```elm\nimport Html.Events\n-- note the import above!\n\nmyInput : (String -> msg) -> Html msg\nmyInput tagFn = <input onInput={tagFn} />\n\nmyButton : Html msg\nmyButton = <button onClick={Clicked}>Click Me!</button>\n```\n\nOr:\n\n```elm\nshowError : List (Html.Attribute msg) -> Html msg\nshowError errorAttrs = <span {:errorAttrs}>Oops!</span>\n```\n\n(note the `:` in `{:errorAttrs}`)\n\nElm expressions can be interpolated into HTML with:\n\n```elm\naddBorder : Html msg -> Html msg\naddBorder s = <div class=\"border\">{s}</div>\n```\n\nUnlike JSX, `elmx` requires a few extensions to accommodate for Elm's types, namely:\n  - `{=text}`, where `text : String` (only required for element interpolation)\n  - `{:list}`, where `list : List (Html msg)`\n\nElm strings can be interpolated with:\n\n```elm\nshowMessage : String -> Html msg\nshowMessage s = <span>{=s}</span>\n```\n\n(note the `=` in `{=s}`)\n\nElm lists can be interpolated with:\n\n```elm\nmakeList : List (Html msg) -> Html msg\nmakeList lis = <ul>{:lis}</ul>\n```\n\n(note the `:` in `{:lis}`)\n\nAll together:\n\n```elm\nimport Html\nimport Html.Attributes exposing (title, align)\nimport List exposing (map)\n\nmain : Html.Html msg\nmain =\n  let\n    hello = <h1>Hello</h1>\n    name = \"Homer\"\n    lis = map (\\s -> <li>{=s}</li>) [ \"Bart\", \"List\", \"Maggie\" ]\n    commonAttrs =\n      [ title \"common title\"\n      , align \"left\"\n      ]\n  in\n    <div class=\"container\" {:commonAttrs}>\n      {hello}\n      {=name} is the father of:\n      <ul>{:lis}</ul>\n    </div>\n```\n\nConsiderations, cool stuff, limitations and workarounds\n-------------------------------------------------------\n\n  * No runtime dependencies: `elmx` just takes Elm code embedded with HTML and produces vanilla `elm-html` code. This means that, other than suboptimal indentation (see below), once compiled into Elm, your original `.elmx` should look just like normal Elm code written in pure Elm.\n\n  * Symmetric code generation: a major goal of `elmx` is to generate the Elm code preserving the line numbers of the original `.elmx` file. This makes finding and fixing issues in your `.elmx` very easy since the line numbers reported by the Elm compiler match the line numbers in your `.elmx`.\n\n  * Non-compliant Elm indentation: because of the *symmetric code generation*, the Elm code produced does not comply with the Elm syntax guide.\n\n  * Easy to opt-out: since almost every Elm program is a valid `elmx` program, you can mix-and-match `elmx` code with traditional `elm-html` code. Even more, if at any point you decide that you want to stop using `elmx`, you can always take the generated `.elm` files, fix the indentation and you are good to go.\n\n  * Non-recursive interpolation: currently Elm code interpolated between `{` and `}` is not recursive (i.e. is a regular grammar not a CFG). This means that you cannot include curly brackets inside curly brackets. For example:\n\n    ```elm\n    -- BROKEN CODE\n    <ul>{:map (\\s -> <li>{=s}</li>) items}</ul>\n    ```\n\n    Note that the interpolated code includes curly brackets and this is not supported. Fortunately this limitation is trivial to overcome with a `let` binding:\n\n    ```elm\n    let\n      lis = map (\\s -> <li>{=s}</li>) items\n    in\n      <ul>{:lis}</ul>\n    ```\n\n  * Required whitespace around `<`: since `elmx` tries to parse HTML tags, valid Elm expressions that look like HTML tags will probably confuse the `elmx` parser. For this reason is best to include some whitespace around your `<` operators.\n","maintainers":[{"name":"pzavolinsky","email":"pzavolinsky@yahoo.com.ar"}],"time":{"modified":"2016-06-10T18:34:35.660Z","created":"2016-01-23T11:05:31.069Z","1.0.0":"2016-01-23T11:05:31.069Z","1.0.1":"2016-02-08T19:16:30.508Z","1.0.2":"2016-03-27T13:09:59.597Z","1.0.3":"2016-05-19T11:06:56.758Z","1.0.4":"2016-06-10T18:34:35.660Z"},"homepage":"https://github.com/pzavolinsky/elmx","keywords":["elm","embedded","html","elmx"],"repository":{"type":"git","url":"git+https://github.com/pzavolinsky/elmx.git"},"author":{"name":"Patricio Zavolinsky"},"bugs":{"url":"https://github.com/pzavolinsky/elmx/issues"},"license":"MIT","readmeFilename":"README.md","users":{"gothy":true},"_attachments":{},"_etag":"\"4KR5MPY8DMFYWO61KOK0W0DE8\""}